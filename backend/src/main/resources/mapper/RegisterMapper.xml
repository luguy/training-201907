<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.augmentum.backend.dao.RegisterMapper" >
  <resultMap id="BaseResultMap" type="cn.com.augmentum.backend.pojo.Register" >
    <id column="register_id" property="registerId" jdbcType="VARCHAR" />
    <result column="register_num" property="registerNum" jdbcType="INTEGER" />
    <result column="register_doctor" property="registerDoctor" jdbcType="VARCHAR" />
    <result column="register_dept" property="registerDept" jdbcType="VARCHAR" />
    <result column="register_patient" property="registerPatient" jdbcType="VARCHAR" />
    <result column="register_cost" property="registerCost" jdbcType="INTEGER" />
    <result column="register_operator" property="registerOperator" jdbcType="VARCHAR" />
    <result column="register_type" property="registerType" jdbcType="SMALLINT" />
    <result column="register_status" property="registerStatus" jdbcType="SMALLINT" />
    <result column="register_time" property="registerTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    register_id, register_num, register_doctor, register_dept, register_patient, register_cost, 
    register_operator, register_type, register_status, register_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.augmentum.backend.pojo.RegisterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from register
    where register_id = #{registerId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from register
    where register_id = #{registerId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.augmentum.backend.pojo.RegisterExample" >
    delete from register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.augmentum.backend.pojo.Register" >
    insert into register (register_id, register_num, register_doctor, 
      register_dept, register_patient, register_cost, 
      register_operator, register_type, register_status, 
      register_time)
    values (#{registerId,jdbcType=VARCHAR}, #{registerNum,jdbcType=INTEGER}, #{registerDoctor,jdbcType=VARCHAR}, 
      #{registerDept,jdbcType=VARCHAR}, #{registerPatient,jdbcType=VARCHAR}, #{registerCost,jdbcType=INTEGER}, 
      #{registerOperator,jdbcType=VARCHAR}, #{registerType,jdbcType=SMALLINT}, #{registerStatus,jdbcType=SMALLINT}, 
      #{registerTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.augmentum.backend.pojo.Register" >
    insert into register
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="registerId != null" >
        register_id,
      </if>
      <if test="registerNum != null" >
        register_num,
      </if>
      <if test="registerDoctor != null" >
        register_doctor,
      </if>
      <if test="registerDept != null" >
        register_dept,
      </if>
      <if test="registerPatient != null" >
        register_patient,
      </if>
      <if test="registerCost != null" >
        register_cost,
      </if>
      <if test="registerOperator != null" >
        register_operator,
      </if>
      <if test="registerType != null" >
        register_type,
      </if>
      <if test="registerStatus != null" >
        register_status,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="registerId != null" >
        #{registerId,jdbcType=VARCHAR},
      </if>
      <if test="registerNum != null" >
        #{registerNum,jdbcType=INTEGER},
      </if>
      <if test="registerDoctor != null" >
        #{registerDoctor,jdbcType=VARCHAR},
      </if>
      <if test="registerDept != null" >
        #{registerDept,jdbcType=VARCHAR},
      </if>
      <if test="registerPatient != null" >
        #{registerPatient,jdbcType=VARCHAR},
      </if>
      <if test="registerCost != null" >
        #{registerCost,jdbcType=INTEGER},
      </if>
      <if test="registerOperator != null" >
        #{registerOperator,jdbcType=VARCHAR},
      </if>
      <if test="registerType != null" >
        #{registerType,jdbcType=SMALLINT},
      </if>
      <if test="registerStatus != null" >
        #{registerStatus,jdbcType=SMALLINT},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.augmentum.backend.pojo.RegisterExample" resultType="java.lang.Integer" >
    select count(*) from register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update register
    <set >
      <if test="record.registerId != null" >
        register_id = #{record.registerId,jdbcType=VARCHAR},
      </if>
      <if test="record.registerNum != null" >
        register_num = #{record.registerNum,jdbcType=INTEGER},
      </if>
      <if test="record.registerDoctor != null" >
        register_doctor = #{record.registerDoctor,jdbcType=VARCHAR},
      </if>
      <if test="record.registerDept != null" >
        register_dept = #{record.registerDept,jdbcType=VARCHAR},
      </if>
      <if test="record.registerPatient != null" >
        register_patient = #{record.registerPatient,jdbcType=VARCHAR},
      </if>
      <if test="record.registerCost != null" >
        register_cost = #{record.registerCost,jdbcType=INTEGER},
      </if>
      <if test="record.registerOperator != null" >
        register_operator = #{record.registerOperator,jdbcType=VARCHAR},
      </if>
      <if test="record.registerType != null" >
        register_type = #{record.registerType,jdbcType=SMALLINT},
      </if>
      <if test="record.registerStatus != null" >
        register_status = #{record.registerStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.registerTime != null" >
        register_time = #{record.registerTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update register
    set register_id = #{record.registerId,jdbcType=VARCHAR},
      register_num = #{record.registerNum,jdbcType=INTEGER},
      register_doctor = #{record.registerDoctor,jdbcType=VARCHAR},
      register_dept = #{record.registerDept,jdbcType=VARCHAR},
      register_patient = #{record.registerPatient,jdbcType=VARCHAR},
      register_cost = #{record.registerCost,jdbcType=INTEGER},
      register_operator = #{record.registerOperator,jdbcType=VARCHAR},
      register_type = #{record.registerType,jdbcType=SMALLINT},
      register_status = #{record.registerStatus,jdbcType=SMALLINT},
      register_time = #{record.registerTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.augmentum.backend.pojo.Register" >
    update register
    <set >
      <if test="registerNum != null" >
        register_num = #{registerNum,jdbcType=INTEGER},
      </if>
      <if test="registerDoctor != null" >
        register_doctor = #{registerDoctor,jdbcType=VARCHAR},
      </if>
      <if test="registerDept != null" >
        register_dept = #{registerDept,jdbcType=VARCHAR},
      </if>
      <if test="registerPatient != null" >
        register_patient = #{registerPatient,jdbcType=VARCHAR},
      </if>
      <if test="registerCost != null" >
        register_cost = #{registerCost,jdbcType=INTEGER},
      </if>
      <if test="registerOperator != null" >
        register_operator = #{registerOperator,jdbcType=VARCHAR},
      </if>
      <if test="registerType != null" >
        register_type = #{registerType,jdbcType=SMALLINT},
      </if>
      <if test="registerStatus != null" >
        register_status = #{registerStatus,jdbcType=SMALLINT},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=VARCHAR},
      </if>
    </set>
    where register_id = #{registerId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.augmentum.backend.pojo.Register" >
    update register
    set register_num = #{registerNum,jdbcType=INTEGER},
      register_doctor = #{registerDoctor,jdbcType=VARCHAR},
      register_dept = #{registerDept,jdbcType=VARCHAR},
      register_patient = #{registerPatient,jdbcType=VARCHAR},
      register_cost = #{registerCost,jdbcType=INTEGER},
      register_operator = #{registerOperator,jdbcType=VARCHAR},
      register_type = #{registerType,jdbcType=SMALLINT},
      register_status = #{registerStatus,jdbcType=SMALLINT},
      register_time = #{registerTime,jdbcType=VARCHAR}
    where register_id = #{registerId,jdbcType=VARCHAR}
  </update>


  <update id="updateStatusByPrimaryKey" parameterType="Map" >
    update register
    set register_status = #{registerStatus,jdbcType=SMALLINT},
    where register_id = #{registerId,jdbcType=VARCHAR}
  </update>


  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from register
  </select>


  <select id="selectMaxNumByDept" resultType="java.lang.Integer" parameterType="java.lang.String">
    select
    MAX(register_num)
    from register where register_dept=#{dept}
  </select>




  <select id="selectList" parameterType="Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from register
    ${subSql}
  </select>

</mapper>